---
- name: Check current node_exporter version
  ansible.builtin.command:
    cmd: "{{ node_exporter_bin_path }} --version"

  failed_when: false
  changed_when: false
  register: node_exporter_version_check

- name: Obtain latest version
  ignore_errors: "{{ ansible_check_mode }}"
  block:
    - name: Obtain latest version information
      when: node_exporter_version is match("latest") or node_exporter_version is not defined
      ansible.builtin.include_tasks:
        file: config-version.yaml

    - name: Download and unarchive node_exporter into temporary location.
      register: node_exporter_download_check
      when: >
        node_exporter_version_check.stdout is not defined
        or node_exporter_version not in node_exporter_version_check.stdout

      ansible.builtin.unarchive:
        src: "{{ node_exporter_download_url }}"
        dest: /tmp
        remote_src: true
        mode: 0755

    - name: Move node_exporter binary into place.
      notify: restart node_exporter
      when: >
        node_exporter_download_check is changed
        or node_exporter_version_check.stdout | length == 0

      ansible.builtin.copy:
        src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}/node_exporter"
        dest: "{{ node_exporter_bin_path }}"
        mode: 0755
        remote_src: true

- name: Ensure node_exporter user exists
  ansible.builtin.user:
    name: node_exporter
    shell: /sbin/nologin
    state: present

- name: Ensure node_exporter systemd unit file exists
  register: node_exporter_service
  ansible.builtin.template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
    mode: 0644

- name: Reload systemd daemon  # noqa: no-handler
  notify: restart node_exporter
  when: node_exporter_service is changed
  ansible.builtin.systemd:
    daemon_reload: true

- name: Start node_exporter
  ignore_errors: "{{ ansible_check_mode }}"
  block:
    - name: Ensure node_exporter is started and enabled
      ansible.builtin.service:
        name: node_exporter
        state: "{{ node_exporter_state }}"
        enabled: "{{ node_exporter_enabled }}"

    - name: Ensure node_exporter is responding
      register: metrics_output
      failed_when: "'Metrics' not in metrics_output.content"
      ansible.builtin.uri:
        url: "http://{% if node_exporter_host != '' %}{{ node_exporter_host }}{% else %}localhost{% endif %}:{{ node_exporter_port }}/"
        return_content: true
